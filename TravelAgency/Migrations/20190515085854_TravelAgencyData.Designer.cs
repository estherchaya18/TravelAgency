// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage;
using Microsoft.EntityFrameworkCore.Storage.Internal;
using System;
using TravelAgency.Models;

namespace TravelAgency.Migrations
{
    [DbContext(typeof(TravelAgencyContext))]
    [Migration("20190515085854_TravelAgencyData")]
    partial class TravelAgencyData
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.0.3-rtm-10026")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("TravelAgency.Models.Airlines", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Name");

                    b.HasKey("Id");

                    b.ToTable("Airlines");
                });

            modelBuilder.Entity("TravelAgency.Models.Airports", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("AirportDetailes");

                    b.HasKey("Id");

                    b.ToTable("Airports");
                });

            modelBuilder.Entity("TravelAgency.Models.Clients", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<bool>("Director");

                    b.Property<string>("Mail");

                    b.Property<string>("Password");

                    b.HasKey("Id");

                    b.ToTable("Clients");
                });

            modelBuilder.Entity("TravelAgency.Models.Flights", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<int?>("AirlinesId");

                    b.Property<int?>("AirportsId");

                    b.Property<int>("AppearanceAirportId");

                    b.Property<string>("AppearanceTerminal");

                    b.Property<DateTime>("AppppearanceDateTime");

                    b.Property<int>("LandingAirportId");

                    b.Property<DateTime>("LandingDateTime");

                    b.Property<string>("LandingTerminal");

                    b.Property<double>("Price");

                    b.Property<int>("ReservedSeats");

                    b.Property<int>("TotalSeats");

                    b.HasKey("Id");

                    b.HasIndex("AirlinesId");

                    b.HasIndex("AirportsId");

                    b.ToTable("Flights");
                });

            modelBuilder.Entity("TravelAgency.Models.Order", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("ClientId");

                    b.Property<int?>("ClientsId");

                    b.Property<DateTime>("DateOrder");

                    b.Property<int>("FlightId");

                    b.Property<int?>("FlightsId");

                    b.HasKey("Id");

                    b.HasIndex("ClientsId");

                    b.HasIndex("FlightsId");

                    b.ToTable("Order");
                });

            modelBuilder.Entity("TravelAgency.Models.OrderPassagers", b =>
                {
                    b.Property<int>("PassangerId");

                    b.Property<int>("OrderId");

                    b.HasKey("PassangerId", "OrderId");

                    b.HasIndex("OrderId");

                    b.ToTable("OrderPassagers");
                });

            modelBuilder.Entity("TravelAgency.Models.Passanger", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime>("BirthDate");

                    b.Property<string>("Name");

                    b.Property<string>("PassportId");

                    b.HasKey("Id");

                    b.ToTable("Passanger");
                });

            modelBuilder.Entity("TravelAgency.Models.Flights", b =>
                {
                    b.HasOne("TravelAgency.Models.Airlines")
                        .WithMany("Flights")
                        .HasForeignKey("AirlinesId");

                    b.HasOne("TravelAgency.Models.Airports", "Airports")
                        .WithMany("Flights")
                        .HasForeignKey("AirportsId");
                });

            modelBuilder.Entity("TravelAgency.Models.Order", b =>
                {
                    b.HasOne("TravelAgency.Models.Clients", "Clients")
                        .WithMany("Orders")
                        .HasForeignKey("ClientsId");

                    b.HasOne("TravelAgency.Models.Flights", "Flights")
                        .WithMany()
                        .HasForeignKey("FlightsId");
                });

            modelBuilder.Entity("TravelAgency.Models.OrderPassagers", b =>
                {
                    b.HasOne("TravelAgency.Models.Order", "Order")
                        .WithMany("orderPassangers")
                        .HasForeignKey("OrderId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("TravelAgency.Models.Passanger", "Passanger")
                        .WithMany("orderPassangers")
                        .HasForeignKey("PassangerId")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
